//
// Generated file, do not edit! Created by opp_msgtool 6.1 from AppPackets.msg.
//

#ifndef __APPPACKETS_M_H
#define __APPPACKETS_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class DataPacket;
/**
 * Class generated from <tt>AppPackets.msg:1</tt> by opp_msgtool.
 * <pre>
 * packet DataPacket
 * {
 *     simtime_t genTime;
 *     int pktNumber;
 *     int burstSize;
 *     simtime_t deadlineRel;
 *     simtime_t deadlineAbs;
 *     int idFrammento;
 *     int numFrammenti;
 * }
 * </pre>
 */
class DataPacket : public ::omnetpp::cPacket
{
  protected:
    omnetpp::simtime_t genTime = SIMTIME_ZERO;
    int pktNumber = 0;
    int burstSize = 0;
    omnetpp::simtime_t deadlineRel = SIMTIME_ZERO;
    omnetpp::simtime_t deadlineAbs = SIMTIME_ZERO;
    int idFrammento = 0;
    int numFrammenti = 0;

  private:
    void copy(const DataPacket& other);

  protected:
    bool operator==(const DataPacket&) = delete;

  public:
    DataPacket(const char *name=nullptr, short kind=0);
    DataPacket(const DataPacket& other);
    virtual ~DataPacket();
    DataPacket& operator=(const DataPacket& other);
    virtual DataPacket *dup() const override {return new DataPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual omnetpp::simtime_t getGenTime() const;
    virtual void setGenTime(omnetpp::simtime_t genTime);

    virtual int getPktNumber() const;
    virtual void setPktNumber(int pktNumber);

    virtual int getBurstSize() const;
    virtual void setBurstSize(int burstSize);

    virtual omnetpp::simtime_t getDeadlineRel() const;
    virtual void setDeadlineRel(omnetpp::simtime_t deadlineRel);

    virtual omnetpp::simtime_t getDeadlineAbs() const;
    virtual void setDeadlineAbs(omnetpp::simtime_t deadlineAbs);

    virtual int getIdFrammento() const;
    virtual void setIdFrammento(int idFrammento);

    virtual int getNumFrammenti() const;
    virtual void setNumFrammenti(int numFrammenti);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DataPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DataPacket& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline DataPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<DataPacket*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __APPPACKETS_M_H

